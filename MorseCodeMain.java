import java.util.Scanner;

public class MorseCodeMain {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            // Be anv√§ndaren skriva in n√•got
            System.out.print("\nSkriv in text eller morsekod: ");
            String input = scanner.nextLine().trim();

            // Kontrollera om inmatningen √§r tom
            if (input.isEmpty()) {
                System.out.println("‚ö†Ô∏è Fel: Du m√•ste skriva n√•got!");
                continue; // G√• tillbaka till b√∂rjan av loopen
            }

            // Identifiera och hantera r√§tt format
            try {
                if (isMorseCode(input)) {
                    // Om det √§r morsekod ‚Üí √∂vers√§tt till text
                    System.out.println("üîç Identifierad som morsekod!");
                    String translatedText = MorseCode.morseToText(input);

                    // Kontrollera om det blev en ogiltig √∂vers√§ttning
                    if (translatedText.contains("?")) {
                        System.out.println("‚ö†Ô∏è Fel: Morseinmatning inneh√•ller ogiltiga koder.");
                    } else {
                        System.out.println("üìú Text: " + translatedText);
                    }

                } else if (isValidText(input)) {
                    // Om det √§r vanlig text ‚Üí √∂vers√§tt till morsekod
                    System.out.println("üîç Identifierad som vanlig text!");
                    System.out.println("üìú Morse: " + MorseCode.textToMorse(input));
                } else {
                    System.out.println("‚ö†Ô∏è Fel: Textinmatning inneh√•ller ogiltiga tecken.");
                }

            } catch (Exception e) {
                System.out.println("‚ùå Ett ov√§ntat fel intr√§ffade: " + e.getMessage());
            }

            // Fr√•ga anv√§ndaren om de vill forts√§tta
            String answer;
            while (true) {
                System.out.print("\nüîÅ Vill du forts√§tta? (j/n): ");
                answer = scanner.nextLine().trim().toLowerCase();

                if (answer.equals("j")) {
                    break; // Forts√§tt loopen
                } else if (answer.equals("n")) {
                    System.out.println("\n‚úÖ Tack f√∂r att du anv√§nt v√•r √∂vers√§ttningsmaskin!");
                    scanner.close(); // St√§ng scanner innan vi avslutar
                    return; // Avsluta programmet
                } else {
                    System.out.println("‚ö†Ô∏è Fel: Skriv 'j' f√∂r att forts√§tta eller 'n' f√∂r att avsluta.");
                }
            }
        }
    }

    // Metod f√∂r att identifiera om inmatningen √§r morsekod
    private static boolean isMorseCode(String input) {
        return input.matches("[ .\\-]+"); // Till√•ter endast mellanslag, punkt (.) och streck (-)
    }

    // Metod f√∂r att identifiera om texten √§r giltig (endast bokst√§ver och siffror)
    private static boolean isValidText(String input) {
        return input.matches("[a-zA-Z0-9 ]+"); // Till√•ter endast bokst√§ver, siffror och mellanslag
    }
}
